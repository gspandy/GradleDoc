.. highlight:: rst

.. _overview:

概述
==============================================================================
特点
------------------------------------------------------------------------------
下面是列举了一些 Gradle_ 的特点.

 :申明式构建和约定事构建:
    基于Groovy的高扩展的领域语言（DSL）是Gradle的核心，她通过提供可以任意组装的语言元素，把声明式构建推向了一个新的高度。另外这些元素还提供对Java,Groovy,OSGi,Web以及Scala这些类型的项目的传统构建方式的支持。你甚至可以通过添加你自己的语言元素或增强现有元素的方式来扩展这个语言。就这样提供优雅的，可维护的，易理解的构建。
    
Language for ependency based programming
    声明式语言. 他提供了极大的灵活让Gralde来满足你独一无二的需求。
Structure you build
    结构化你的脚本
Deep API
    深入API
Gradle Scales
    Gradle 的扩展性非常好。
多项目构建
    Gradle 支持多个项目构建。
多样的依赖管理
    不同的团队可能会喜欢不同的依赖管理。
Gradle是第一个集成构建工具
    Ant任务是一等公民。
迁移成本低
    Gradle 可以适配任何结构。
Groovy
    Gradle的构建脚本是用Groovy写的而不是xml。
Gradle 包装器
    Gradle 包装器允许你扩展。
免费并且开源
    Gradle是一个开源项目。他使用 ASL_ 开源协议。

为什么选Groovy
------------------------------------------------------------
我们认为基于动态语言的 DSL_ 要比Xml更适合做构建脚本。为什么在一堆动态语言中偏偏选中Groovy呢? 这是由Gradle活动的上下文所决定的（in the context Gradle is operating in）。 虽然Gradle是通用的构建工具，但是他重点还是Java项目。很显然这些项目的开发人员都了解Java。我们认为构建应该对所有开发人员尽可能的透明。
也许你会说为什么不直接用Java来做构建脚本。这是一个好问题。那样的话构建对所有开发人员将有最高的透明程度，并且拥有最平滑的学习曲线。


.. include:: links.rst
